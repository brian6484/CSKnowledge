{
  "type": "excalidraw",
  "version": 2,
  "source": "https://excalidraw.com",
  "elements": [
    {
      "id": "_uk-7KDDBFQU5mXM5QA2n",
      "type": "rectangle",
      "x": 373.779262689799,
      "y": 794.4625705591252,
      "width": 985.4285103934153,
      "height": 592.5715718950546,
      "angle": 0,
      "strokeColor": "#1e1e1e",
      "backgroundColor": "transparent",
      "fillStyle": "solid",
      "strokeWidth": 2,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "groupIds": [],
      "frameId": null,
      "index": "aU",
      "roundness": {
        "type": 3
      },
      "seed": 1832363592,
      "version": 186,
      "versionNonce": 148885304,
      "isDeleted": false,
      "boundElements": [],
      "updated": 1760577666650,
      "link": null,
      "locked": false
    },
    {
      "id": "AEwDiJz33uvCcZ_KMatzM",
      "type": "text",
      "x": 410.7792321722209,
      "y": 843.4625285974553,
      "width": 924.8593139648438,
      "height": 450,
      "angle": 0,
      "strokeColor": "#1e1e1e",
      "backgroundColor": "transparent",
      "fillStyle": "solid",
      "strokeWidth": 2,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "groupIds": [],
      "frameId": null,
      "index": "aV",
      "roundness": null,
      "seed": 760041032,
      "version": 848,
      "versionNonce": 805846072,
      "isDeleted": false,
      "boundElements": [],
      "updated": 1760577866200,
      "link": null,
      "locked": false,
      "text": "situation: Online Chess Game with Leaderboard\n\nclairfying questions:\nis it strictly 1v1 with no observers allowed? observers allowed for future enhancement\nis there regional and global rank in leaderboard? yes and also time-based like daily, weekly,\ndo we have to detect the possible areas that this chess piece can move to? yes, server must\nvalidate all moves and all validation done on server side\ndo we keep game replays? yes store ranked games permanantely but delete casual games after \n30 days\nwats average gameplay data size?\n\nfunctional requirements:\n- global, regional and time-based leaderboard\n- 1v1 game play with casual and ranked modes\n- detect areas that this chess piece can move to \n- store ranked games permanently while deleting casual games after 30 days\n- replay gameplay\n",
      "fontSize": 20,
      "fontFamily": 5,
      "textAlign": "left",
      "verticalAlign": "top",
      "containerId": null,
      "originalText": "situation: Online Chess Game with Leaderboard\n\nclairfying questions:\nis it strictly 1v1 with no observers allowed? observers allowed for future enhancement\nis there regional and global rank in leaderboard? yes and also time-based like daily, weekly,\ndo we have to detect the possible areas that this chess piece can move to? yes, server must\nvalidate all moves and all validation done on server side\ndo we keep game replays? yes store ranked games permanantely but delete casual games after \n30 days\nwats average gameplay data size?\n\nfunctional requirements:\n- global, regional and time-based leaderboard\n- 1v1 game play with casual and ranked modes\n- detect areas that this chess piece can move to \n- store ranked games permanently while deleting casual games after 30 days\n- replay gameplay\n",
      "autoResize": true,
      "lineHeight": 1.25
    },
    {
      "id": "DYb9ZxjTeK1R855-Gw6ij",
      "type": "rectangle",
      "x": 1403.779248157619,
      "y": 802.4625474892894,
      "width": 1064.7618466331835,
      "height": 580.5714634486606,
      "angle": 0,
      "strokeColor": "#1e1e1e",
      "backgroundColor": "transparent",
      "fillStyle": "solid",
      "strokeWidth": 2,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "groupIds": [],
      "frameId": null,
      "index": "aW",
      "roundness": {
        "type": 3
      },
      "seed": 530487112,
      "version": 170,
      "versionNonce": 2008439624,
      "isDeleted": false,
      "boundElements": [],
      "updated": 1760578888119,
      "link": null,
      "locked": false
    },
    {
      "id": "iM_xk9NkhJYlOmSWyiD9E",
      "type": "text",
      "x": 1434.3507116062794,
      "y": 837.3196816271243,
      "width": 1013.6591796875,
      "height": 500,
      "angle": 0,
      "strokeColor": "#1e1e1e",
      "backgroundColor": "transparent",
      "fillStyle": "solid",
      "strokeWidth": 2,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "groupIds": [],
      "frameId": null,
      "index": "aX",
      "roundness": null,
      "seed": 2140800328,
      "version": 1127,
      "versionNonce": 273914440,
      "isDeleted": false,
      "boundElements": [],
      "updated": 1760578877859,
      "link": null,
      "locked": false,
      "text": "non-functional req:\nCAP theorem: should be CP? cuz if u see stale data (old moves) and u made certain moves against\nthem and suddenly it becomes consistent and all the moves were made redundant and invalidated,\nit is worse than being unavailable\n\nwrong! Im confusing game state consistency with CAP. for game it needs strong consistency like\nI said about stale moves, which is correct. It is ACID transaction on single game server. \nBut for overall system, it should be AP cuz since no 2 games depend on each other, even if theres\npartition, servers should accept games to increase availability, rather than not accept games to\nincrease conistency for leaderboard\n\ncalc:\nin-memory data is 10Kb/game, gamereplay in PGN format is 3Kb/game, 50k concurrent games, \n1M games/day\n\nin-memory data usage: 10K *50k = 500 M = 0.5Gb at any given time, manageable by typical server's RAM\ngameplay data usage: 1M * 3K = 3Gb/day = 90Gb/month of storage, not bad \n\n\n",
      "fontSize": 20,
      "fontFamily": 5,
      "textAlign": "left",
      "verticalAlign": "top",
      "containerId": null,
      "originalText": "non-functional req:\nCAP theorem: should be CP? cuz if u see stale data (old moves) and u made certain moves against\nthem and suddenly it becomes consistent and all the moves were made redundant and invalidated,\nit is worse than being unavailable\n\nwrong! Im confusing game state consistency with CAP. for game it needs strong consistency like\nI said about stale moves, which is correct. It is ACID transaction on single game server. \nBut for overall system, it should be AP cuz since no 2 games depend on each other, even if theres\npartition, servers should accept games to increase availability, rather than not accept games to\nincrease conistency for leaderboard\n\ncalc:\nin-memory data is 10Kb/game, gamereplay in PGN format is 3Kb/game, 50k concurrent games, \n1M games/day\n\nin-memory data usage: 10K *50k = 500 M = 0.5Gb at any given time, manageable by typical server's RAM\ngameplay data usage: 1M * 3K = 3Gb/day = 90Gb/month of storage, not bad \n\n\n",
      "autoResize": true,
      "lineHeight": 1.25
    },
    {
      "id": "0yamClllSXkqIyDjwpk6U",
      "type": "rectangle",
      "x": 384.16964221705706,
      "y": 1439.865658356744,
      "width": 1006.9999858311246,
      "height": 1478.285702296666,
      "angle": 0,
      "strokeColor": "#1e1e1e",
      "backgroundColor": "transparent",
      "fillStyle": "solid",
      "strokeWidth": 2,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "groupIds": [],
      "frameId": null,
      "index": "aY",
      "roundness": {
        "type": 3
      },
      "seed": 1711927096,
      "version": 339,
      "versionNonce": 34009416,
      "isDeleted": false,
      "boundElements": [],
      "updated": 1760589542068,
      "link": null,
      "locked": false
    },
    {
      "id": "f25wuXz3E6DGWmNSyIJWQ",
      "type": "text",
      "x": 410.88389632385105,
      "y": 1464.7227706963088,
      "width": 990.5394287109375,
      "height": 2375,
      "angle": 0,
      "strokeColor": "#1e1e1e",
      "backgroundColor": "transparent",
      "fillStyle": "solid",
      "strokeWidth": 2,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "groupIds": [],
      "frameId": null,
      "index": "aZ",
      "roundness": null,
      "seed": 1596157496,
      "version": 4510,
      "versionNonce": 211596515,
      "isDeleted": false,
      "boundElements": [],
      "updated": 1761791040756,
      "link": null,
      "locked": false,
      "text": "high-level design:\ngeneral flow:\nclient -> lb -> user service (authentication, user profile, etc) and game service(match players\nin 1v1 in ranked/casual modes) -> user db(not bottleneck here, can just use postgres) , \ngameplay db(not sure postgres can store PGN but its just 90Gb/month so i think postgres\nshould be fine), leaderboard(gonna be read-heavy and with AP system needed, maybe \nCassandra with Redis cache? Not sure of the logic of leaderboard tho\n\nmaybe parition key is user_id and cluster key is user's ELO? but need cross-replica query and\nfrequent updates which is ex. maybe can just use redis only cuz i think leaderboard data is\nsmall <- this is true. Even if we partition by elo range and cluster by key with Cassandra, there\nis still uneven distribution and hot partition and still need cross partition query for top 100 \nSo use redis (explained more)\n\ngpt:\nits better to be SOLID (S) and separate each service's responsibility. My original design originally\nhad game service handle both matchmaking queue and the actual game connection. But separate \nit out.\n\nLB → API Gateway → Matchmaking Service\n                 → Gameplay Service\n\nflow: \n1) player connects via websocket -> matchmaking -> finds opponents\n2) matchmaking returns \"connect to gameplay server 3\"\n3) player opens new websocket -> gameplay service (server 3) -> play game\n4) game ends, saved in db\n5) later player uses HTTP GET -> replay service -> watch replay\n\nand api gw can handle both WS and http (diff protocols) and route to appropriate service based on\npath (\"/api/match\" , \"/api/replay\")\n\nmatchmaking service maintains persistent connection for real-time matching but **DOESNT CONNECT\nPLAYERS TO GAME SERVER**. It just finds compatible users via checking elo rating with Redis\nsorted set and once match is found, it tells players which game server to connect to.\n\nGameplay service: this handles real-time game state and also uses websocket for bidirectional\ncommunication. Each game server instance hosts active matches.\n\nmatchmaking \npair 2 players by elo rating with Redis sorted set (member=user_id, score = ELO)\nZADD matchmaking_queue 1850 user_123\nZADD matchmaking_queue 1900 user_456\nZRANGEBYSCORE machmaking_queue 1800(min) 1900(max)\nZREM matchmaking_queue user_123 user_456\n\nleaderboard:\nonce match is done, update the elo\nZADD board 2000 user_123\nZADD board 1800 user_456\nZREVRANGE board 0 9 \n\ngame service:\nwebsocket connection for real-time moves and validates moves server side\n\nif websocket isnt allowed, then use Server sent events (SSE) for one-way real-time update from\nserver to client. SSE unlike webscoket which is bidrectional, is when server talks and client listens.\nIts diff from polling where instead of continously asking every time interval, sse notifies when\ntheres an update.\n\nThen i thought isnt this websocket? But websocket is for SERVER-TO-SERVER, not SERVER-\nTO-CLIENT so doesnt work. \n\nThen client sends moves via POST like\n1. Client sends move → POST /game/{id}/move\n2. Server validates:\n   - Is it this player's turn?\n   - Is the move legal (chess rules)?\n   - Is game still active?\n3. If valid:\n   - Update game state in database\n   - Broadcast to opponent (SSE/polling)\n   - Update leaderboard if game ended\n4. If invalid:\n   - Return 400 error with reason\n\ngame service storage: (redis for in-memory active games & postgres for gameplay history db)\nparition by game_id so that reads and writes for games are evenly distributed across nodes\nits bad to partition by user_id cuz might have hot users and uneven distribution\n\nparition is different from sharding. parititon is within 1 db that splits data into multiple\nsub-tables (parititons) on same machine. but sharding is across multiple dbs/servers\n\ngameplay history db:\nindex = fast lookup data structure (like book's index)\nindex by (user_id + timestamp) cuz most common query is show my recent games and this composite\nindex covers this for fast game look ups\n\nuser rating db in user service:\nso we not only use cache for ELO but we need single cold path - source of truth like db so we\nuse postgresql db\n\nindex: (elo_rating DESC, user_id) for leaderboard query\nwhen game ends, game service updates this user rating db and also update redis sorted set (async\nworker or trigger can do this)",
      "fontSize": 20,
      "fontFamily": 5,
      "textAlign": "left",
      "verticalAlign": "top",
      "containerId": null,
      "originalText": "high-level design:\ngeneral flow:\nclient -> lb -> user service (authentication, user profile, etc) and game service(match players\nin 1v1 in ranked/casual modes) -> user db(not bottleneck here, can just use postgres) , \ngameplay db(not sure postgres can store PGN but its just 90Gb/month so i think postgres\nshould be fine), leaderboard(gonna be read-heavy and with AP system needed, maybe \nCassandra with Redis cache? Not sure of the logic of leaderboard tho\n\nmaybe parition key is user_id and cluster key is user's ELO? but need cross-replica query and\nfrequent updates which is ex. maybe can just use redis only cuz i think leaderboard data is\nsmall <- this is true. Even if we partition by elo range and cluster by key with Cassandra, there\nis still uneven distribution and hot partition and still need cross partition query for top 100 \nSo use redis (explained more)\n\ngpt:\nits better to be SOLID (S) and separate each service's responsibility. My original design originally\nhad game service handle both matchmaking queue and the actual game connection. But separate \nit out.\n\nLB → API Gateway → Matchmaking Service\n                 → Gameplay Service\n\nflow: \n1) player connects via websocket -> matchmaking -> finds opponents\n2) matchmaking returns \"connect to gameplay server 3\"\n3) player opens new websocket -> gameplay service (server 3) -> play game\n4) game ends, saved in db\n5) later player uses HTTP GET -> replay service -> watch replay\n\nand api gw can handle both WS and http (diff protocols) and route to appropriate service based on\npath (\"/api/match\" , \"/api/replay\")\n\nmatchmaking service maintains persistent connection for real-time matching but **DOESNT CONNECT\nPLAYERS TO GAME SERVER**. It just finds compatible users via checking elo rating with Redis\nsorted set and once match is found, it tells players which game server to connect to.\n\nGameplay service: this handles real-time game state and also uses websocket for bidirectional\ncommunication. Each game server instance hosts active matches.\n\nmatchmaking \npair 2 players by elo rating with Redis sorted set (member=user_id, score = ELO)\nZADD matchmaking_queue 1850 user_123\nZADD matchmaking_queue 1900 user_456\nZRANGEBYSCORE machmaking_queue 1800(min) 1900(max)\nZREM matchmaking_queue user_123 user_456\n\nleaderboard:\nonce match is done, update the elo\nZADD board 2000 user_123\nZADD board 1800 user_456\nZREVRANGE board 0 9 \n\ngame service:\nwebsocket connection for real-time moves and validates moves server side\n\nif websocket isnt allowed, then use Server sent events (SSE) for one-way real-time update from\nserver to client. SSE unlike webscoket which is bidrectional, is when server talks and client listens.\nIts diff from polling where instead of continously asking every time interval, sse notifies when\ntheres an update.\n\nThen i thought isnt this websocket? But websocket is for SERVER-TO-SERVER, not SERVER-\nTO-CLIENT so doesnt work. \n\nThen client sends moves via POST like\n1. Client sends move → POST /game/{id}/move\n2. Server validates:\n   - Is it this player's turn?\n   - Is the move legal (chess rules)?\n   - Is game still active?\n3. If valid:\n   - Update game state in database\n   - Broadcast to opponent (SSE/polling)\n   - Update leaderboard if game ended\n4. If invalid:\n   - Return 400 error with reason\n\ngame service storage: (redis for in-memory active games & postgres for gameplay history db)\nparition by game_id so that reads and writes for games are evenly distributed across nodes\nits bad to partition by user_id cuz might have hot users and uneven distribution\n\nparition is different from sharding. parititon is within 1 db that splits data into multiple\nsub-tables (parititons) on same machine. but sharding is across multiple dbs/servers\n\ngameplay history db:\nindex = fast lookup data structure (like book's index)\nindex by (user_id + timestamp) cuz most common query is show my recent games and this composite\nindex covers this for fast game look ups\n\nuser rating db in user service:\nso we not only use cache for ELO but we need single cold path - source of truth like db so we\nuse postgresql db\n\nindex: (elo_rating DESC, user_id) for leaderboard query\nwhen game ends, game service updates this user rating db and also update redis sorted set (async\nworker or trigger can do this)",
      "autoResize": true,
      "lineHeight": 1.25
    },
    {
      "id": "xtmiem43LZV8SVL_uUxY3",
      "type": "rectangle",
      "x": 1439.4556137223585,
      "y": 1452.8656452777814,
      "width": 1034.0000534057617,
      "height": 744.0000152587891,
      "angle": 0,
      "strokeColor": "#1e1e1e",
      "backgroundColor": "transparent",
      "fillStyle": "solid",
      "strokeWidth": 2,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "groupIds": [],
      "frameId": null,
      "index": "ab",
      "roundness": {
        "type": 3
      },
      "seed": 1389077816,
      "version": 103,
      "versionNonce": 1188921160,
      "isDeleted": false,
      "boundElements": [],
      "updated": 1760589928405,
      "link": null,
      "locked": false
    },
    {
      "id": "Iy9PaXgsCbrTP6gDRc76V",
      "type": "text",
      "x": 1479.2056366105421,
      "y": 1476.6156452777814,
      "width": 1008.6591796875,
      "height": 975,
      "angle": 0,
      "strokeColor": "#1e1e1e",
      "backgroundColor": "transparent",
      "fillStyle": "solid",
      "strokeWidth": 2,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "groupIds": [],
      "frameId": null,
      "index": "ac",
      "roundness": null,
      "seed": 1203768120,
      "version": 1207,
      "versionNonce": 1117859085,
      "isDeleted": false,
      "boundElements": [],
      "updated": 1761792002522,
      "link": null,
      "locked": false,
      "text": "IMPT! for scaling and bottle neck:\n1) game service (websocket connection) \n**Problem:**\n- Each game = 2 WebSocket connections\n- 50K games = **100K concurrent WebSocket connections**\n- Single server limit: ~10-20K connections\n\n**Solution: Horizontal Scaling**\n- horizontal scaling with LB(sticky session by game_id cuz both players in same game need to \nconnect to same server)\n2) db writes\n**Problem:**\n- 24 games/sec completion = 24 writes/sec to Postgres\n- Each write updates:\n  - Game history table (insert)\n  - User ratings (2 updates per game)\n\n**Write amplification:** 24 games/sec × 3 DB operations = **~75 writes/sec**\nwe need to insert 1 record to game history table, update 2 records in user rating \nthis can be decoupled as it is async operation\n\ngame ends -> kafka queue -> async workers(batch writes to postgres and update redis leaderboard)\n\nso db doesnt have to wait for db and it decouples **WRITE SPIKES**\n\n3)leaderboard redis\nthere can be too much reads so we use Redis + CDN!\n\nbut i thought cdn is for static content! actually leaderboard is semi static content cuz top rankings\nchange slowly and stale data is acceptable\n\nclient -> CDN (with short ttl like 10s) -> Redis -> postgres (rebuild redis on restart only) \n\n4) hotspot problem for Magnus Carlsen \nstore its list of recent games in redis like user:123:games and only wheren theres cache miss, we search\nDB\nuser:123:games -> ttl 1h\nuser:123:profile -> ttl 1h etc\n",
      "fontSize": 20,
      "fontFamily": 5,
      "textAlign": "left",
      "verticalAlign": "top",
      "containerId": null,
      "originalText": "IMPT! for scaling and bottle neck:\n1) game service (websocket connection) \n**Problem:**\n- Each game = 2 WebSocket connections\n- 50K games = **100K concurrent WebSocket connections**\n- Single server limit: ~10-20K connections\n\n**Solution: Horizontal Scaling**\n- horizontal scaling with LB(sticky session by game_id cuz both players in same game need to \nconnect to same server)\n2) db writes\n**Problem:**\n- 24 games/sec completion = 24 writes/sec to Postgres\n- Each write updates:\n  - Game history table (insert)\n  - User ratings (2 updates per game)\n\n**Write amplification:** 24 games/sec × 3 DB operations = **~75 writes/sec**\nwe need to insert 1 record to game history table, update 2 records in user rating \nthis can be decoupled as it is async operation\n\ngame ends -> kafka queue -> async workers(batch writes to postgres and update redis leaderboard)\n\nso db doesnt have to wait for db and it decouples **WRITE SPIKES**\n\n3)leaderboard redis\nthere can be too much reads so we use Redis + CDN!\n\nbut i thought cdn is for static content! actually leaderboard is semi static content cuz top rankings\nchange slowly and stale data is acceptable\n\nclient -> CDN (with short ttl like 10s) -> Redis -> postgres (rebuild redis on restart only) \n\n4) hotspot problem for Magnus Carlsen \nstore its list of recent games in redis like user:123:games and only wheren theres cache miss, we search\nDB\nuser:123:games -> ttl 1h\nuser:123:profile -> ttl 1h etc\n",
      "autoResize": true,
      "lineHeight": 1.25
    },
    {
      "id": "UxouD5Mfm9bxZQs6OEucQ",
      "type": "ellipse",
      "x": 2073.7384568213683,
      "y": 2401.7406940566657,
      "width": 215.00003814697266,
      "height": 332,
      "angle": 0,
      "strokeColor": "#1e1e1e",
      "backgroundColor": "#ffffff",
      "fillStyle": "solid",
      "strokeWidth": 2,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "groupIds": [],
      "frameId": null,
      "index": "af",
      "roundness": {
        "type": 2
      },
      "seed": 1669569091,
      "version": 560,
      "versionNonce": 87164707,
      "isDeleted": false,
      "boundElements": [
        {
          "type": "text",
          "id": "F35rnE32bImDH8R1JXbCi"
        },
        {
          "id": "eRTdGK7xVaqmJjvuLT3Rk",
          "type": "arrow"
        },
        {
          "id": "jBcHFnAK0tcbXfJDdEDZO",
          "type": "arrow"
        }
      ],
      "updated": 1761791939699,
      "link": null,
      "locked": false
    },
    {
      "id": "F35rnE32bImDH8R1JXbCi",
      "type": "text",
      "x": 2115.224483430309,
      "y": 2455.360968379699,
      "width": 132,
      "height": 225,
      "angle": 0,
      "strokeColor": "#1e1e1e",
      "backgroundColor": "#ffffff",
      "fillStyle": "solid",
      "strokeWidth": 2,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "groupIds": [],
      "frameId": null,
      "index": "ag",
      "roundness": null,
      "seed": 226889187,
      "version": 622,
      "versionNonce": 1011559107,
      "isDeleted": false,
      "boundElements": null,
      "updated": 1761791939699,
      "link": null,
      "locked": false,
      "text": "CDN (first\nlayer cache\nto store\nleaderboard\nresults\n**with short\nTTL**, if\nmiss then go\nto redis",
      "fontSize": 20,
      "fontFamily": 8,
      "textAlign": "center",
      "verticalAlign": "middle",
      "containerId": "UxouD5Mfm9bxZQs6OEucQ",
      "originalText": "CDN (first layer cache to store leaderboard results **with short TTL**, if miss then go to redis",
      "autoResize": true,
      "lineHeight": 1.25
    },
    {
      "id": "yfjstreCZRYMrcNdci3wu",
      "type": "rectangle",
      "x": 1829.738466993895,
      "y": 3008.0739688979747,
      "width": 241.0000228881836,
      "height": 335,
      "angle": 0,
      "strokeColor": "#1e1e1e",
      "backgroundColor": "#ffffff",
      "fillStyle": "solid",
      "strokeWidth": 2,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "groupIds": [],
      "frameId": null,
      "index": "ah",
      "roundness": {
        "type": 3
      },
      "seed": 285194979,
      "version": 665,
      "versionNonce": 824171939,
      "isDeleted": false,
      "boundElements": [
        {
          "type": "text",
          "id": "3O8kpi_kItUe1ivs79zT5"
        },
        {
          "id": "KcIMjpmc65fv8f7YjE3Kf",
          "type": "arrow"
        },
        {
          "id": "pu3pA9SzlhUr-mOcwK9Pu",
          "type": "arrow"
        }
      ],
      "updated": 1761791939699,
      "link": null,
      "locked": false
    },
    {
      "id": "3O8kpi_kItUe1ivs79zT5",
      "type": "text",
      "x": 1834.7384784379867,
      "y": 3013.0739688979747,
      "width": 231,
      "height": 325,
      "angle": 0,
      "strokeColor": "#1e1e1e",
      "backgroundColor": "#ffffff",
      "fillStyle": "solid",
      "strokeWidth": 2,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "groupIds": [],
      "frameId": null,
      "index": "ai",
      "roundness": null,
      "seed": 1916114317,
      "version": 665,
      "versionNonce": 154808643,
      "isDeleted": false,
      "boundElements": null,
      "updated": 1761791939699,
      "link": null,
      "locked": false,
      "text": "Load Balancer (evenly\ndistribute traffic)\nLoad balancers are\nlayer 4 (TCP/UDP) or\nsimple layer 7\n(HTTP):\n\nThey distribute\nconnections but don't\nunderstand \"player\n123 is in\ngame_server_5\" so\nneed api gw",
      "fontSize": 20,
      "fontFamily": 8,
      "textAlign": "center",
      "verticalAlign": "middle",
      "containerId": "yfjstreCZRYMrcNdci3wu",
      "originalText": "Load Balancer (evenly distribute traffic)\nLoad balancers are layer 4 (TCP/UDP) or simple layer 7 (HTTP):\n\nThey distribute connections but don't understand \"player 123 is in game_server_5\" so need api gw",
      "autoResize": true,
      "lineHeight": 1.25
    },
    {
      "id": "O_mPNbTzQB9a_tw_xIHNp",
      "type": "rectangle",
      "x": 1418.4051540056137,
      "y": 3038.407411585963,
      "width": 173.9999771118164,
      "height": 133.00003051757812,
      "angle": 0,
      "strokeColor": "#1e1e1e",
      "backgroundColor": "#ffffff",
      "fillStyle": "solid",
      "strokeWidth": 2,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "groupIds": [],
      "frameId": null,
      "index": "aj",
      "roundness": {
        "type": 3
      },
      "seed": 1515050797,
      "version": 511,
      "versionNonce": 1311667235,
      "isDeleted": false,
      "boundElements": [
        {
          "type": "text",
          "id": "9gcHNBUIdgX7zPiHIc5dQ"
        },
        {
          "id": "KcIMjpmc65fv8f7YjE3Kf",
          "type": "arrow"
        },
        {
          "id": "jBcHFnAK0tcbXfJDdEDZO",
          "type": "arrow"
        }
      ],
      "updated": 1761791939699,
      "link": null,
      "locked": false
    },
    {
      "id": "9gcHNBUIdgX7zPiHIc5dQ",
      "type": "text",
      "x": 1483.4051425615219,
      "y": 3092.407426844752,
      "width": 44,
      "height": 25,
      "angle": 0,
      "strokeColor": "#1e1e1e",
      "backgroundColor": "#ffffff",
      "fillStyle": "solid",
      "strokeWidth": 2,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "groupIds": [],
      "frameId": null,
      "index": "ak",
      "roundness": null,
      "seed": 33107853,
      "version": 483,
      "versionNonce": 1697773507,
      "isDeleted": false,
      "boundElements": null,
      "updated": 1761791939699,
      "link": null,
      "locked": false,
      "text": "User",
      "fontSize": 20,
      "fontFamily": 8,
      "textAlign": "center",
      "verticalAlign": "middle",
      "containerId": "O_mPNbTzQB9a_tw_xIHNp",
      "originalText": "User",
      "autoResize": true,
      "lineHeight": 1.25
    },
    {
      "id": "BkGbI5yyATWIWR00NKdl4",
      "type": "rectangle",
      "x": 2588.071838474201,
      "y": 3031.7407067723225,
      "width": 335.99998474121105,
      "height": 163.00003051757812,
      "angle": 0,
      "strokeColor": "#1e1e1e",
      "backgroundColor": "#ffffff",
      "fillStyle": "solid",
      "strokeWidth": 2,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "groupIds": [],
      "frameId": null,
      "index": "al",
      "roundness": {
        "type": 3
      },
      "seed": 1279453379,
      "version": 784,
      "versionNonce": 1711131299,
      "isDeleted": false,
      "boundElements": [
        {
          "type": "text",
          "id": "t7HKuiAR5iLddUTiYcvYA"
        },
        {
          "id": "yso96Tq7S6PFTUrRr-KAe",
          "type": "arrow"
        },
        {
          "id": "6v92clTLzLvREJPS03Cfl",
          "type": "arrow"
        }
      ],
      "updated": 1761791939699,
      "link": null,
      "locked": false
    },
    {
      "id": "t7HKuiAR5iLddUTiYcvYA",
      "type": "text",
      "x": 2651.5718308448063,
      "y": 3100.7407220311115,
      "width": 209,
      "height": 25,
      "angle": 0,
      "strokeColor": "#1e1e1e",
      "backgroundColor": "#ffffff",
      "fillStyle": "solid",
      "strokeWidth": 2,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "groupIds": [],
      "frameId": null,
      "index": "am",
      "roundness": null,
      "seed": 1132596493,
      "version": 744,
      "versionNonce": 634551875,
      "isDeleted": false,
      "boundElements": null,
      "updated": 1761791939699,
      "link": null,
      "locked": false,
      "text": "Matchmaking service",
      "fontSize": 20,
      "fontFamily": 8,
      "textAlign": "center",
      "verticalAlign": "middle",
      "containerId": "BkGbI5yyATWIWR00NKdl4",
      "originalText": "Matchmaking service",
      "autoResize": true,
      "lineHeight": 1.25
    },
    {
      "id": "v4qlF3js7jtJHbb7-KLjI",
      "type": "rectangle",
      "x": 2572.7385865210763,
      "y": 3311.740643194037,
      "width": 358.0000305175781,
      "height": 184.9999618530278,
      "angle": 0,
      "strokeColor": "#1e1e1e",
      "backgroundColor": "#ffffff",
      "fillStyle": "solid",
      "strokeWidth": 2,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "groupIds": [],
      "frameId": null,
      "index": "an",
      "roundness": {
        "type": 3
      },
      "seed": 976706797,
      "version": 728,
      "versionNonce": 841867555,
      "isDeleted": false,
      "boundElements": [
        {
          "type": "text",
          "id": "WLVL3py7AVQbkxfCXFnkN"
        },
        {
          "id": "6n1NXy7MXcocSrqM6nGtE",
          "type": "arrow"
        },
        {
          "id": "o_OVZLhd21rIEvmD78zkD",
          "type": "arrow"
        }
      ],
      "updated": 1761791939699,
      "link": null,
      "locked": false
    },
    {
      "id": "WLVL3py7AVQbkxfCXFnkN",
      "type": "text",
      "x": 2663.7386017798653,
      "y": 3391.740624120551,
      "width": 176,
      "height": 25,
      "angle": 0,
      "strokeColor": "#1e1e1e",
      "backgroundColor": "#ffffff",
      "fillStyle": "solid",
      "strokeWidth": 2,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "groupIds": [],
      "frameId": null,
      "index": "ao",
      "roundness": null,
      "seed": 1708091629,
      "version": 707,
      "versionNonce": 1354482883,
      "isDeleted": false,
      "boundElements": null,
      "updated": 1761791939699,
      "link": null,
      "locked": false,
      "text": "Gameplay service",
      "fontSize": 20,
      "fontFamily": 8,
      "textAlign": "center",
      "verticalAlign": "middle",
      "containerId": "v4qlF3js7jtJHbb7-KLjI",
      "originalText": "Gameplay service",
      "autoResize": true,
      "lineHeight": 1.25
    },
    {
      "id": "mPzBXEfIUS4rqk6p3hcBO",
      "type": "ellipse",
      "x": 2553.405243015217,
      "y": 2130.407342921412,
      "width": 383.99993896484375,
      "height": 827,
      "angle": 0,
      "strokeColor": "#1e1e1e",
      "backgroundColor": "#ffffff",
      "fillStyle": "solid",
      "strokeWidth": 2,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "groupIds": [],
      "frameId": null,
      "index": "ap",
      "roundness": {
        "type": 2
      },
      "seed": 1394336547,
      "version": 936,
      "versionNonce": 475969443,
      "isDeleted": false,
      "boundElements": [
        {
          "type": "text",
          "id": "VPt4IxuazhoCZqGUl6GI7"
        },
        {
          "id": "QaGuJh6Li_WEyApYbd70E",
          "type": "arrow"
        },
        {
          "id": "eRTdGK7xVaqmJjvuLT3Rk",
          "type": "arrow"
        },
        {
          "id": "yso96Tq7S6PFTUrRr-KAe",
          "type": "arrow"
        }
      ],
      "updated": 1761791939699,
      "link": null,
      "locked": false
    },
    {
      "id": "VPt4IxuazhoCZqGUl6GI7",
      "type": "text",
      "x": 2619.1407320890075,
      "y": 2256.518688900775,
      "width": 253,
      "height": 575,
      "angle": 0,
      "strokeColor": "#1e1e1e",
      "backgroundColor": "#ffffff",
      "fillStyle": "solid",
      "strokeWidth": 2,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "groupIds": [],
      "frameId": null,
      "index": "aq",
      "roundness": null,
      "seed": 2087121891,
      "version": 1200,
      "versionNonce": 462277443,
      "isDeleted": false,
      "boundElements": null,
      "updated": 1761791939699,
      "link": null,
      "locked": false,
      "text": "Redis instance for both\nLeaderboard and\nmatchmaking\n\nLeaderboard: \nZADD leaderboard:global\n2400 user123\nHSET (dictionary)\nuser:123:stats elo 2400\nwins 150 loss 45 \n\nMatchmaking Redis\nZADD queue user123 2400\nZADD queue user 69 2450\nZREVRANGE queue 0 -1\nWITHSCORES\n\nwithscores returns\nmember AND score,\ninstead of just\nmemebers\nand ZREM remove users\nwith similar elo ",
      "fontSize": 20,
      "fontFamily": 8,
      "textAlign": "center",
      "verticalAlign": "middle",
      "containerId": "mPzBXEfIUS4rqk6p3hcBO",
      "originalText": "Redis instance for both Leaderboard and matchmaking\n\nLeaderboard: \nZADD leaderboard:global 2400 user123\nHSET (dictionary) user:123:stats elo 2400 wins 150 loss 45 \n\nMatchmaking Redis\nZADD queue user123 2400\nZADD queue user 69 2450\nZREVRANGE queue 0 -1 WITHSCORES\n\nwithscores returns member AND score, instead of just memebers\nand ZREM remove users with similar elo ",
      "autoResize": true,
      "lineHeight": 1.25
    },
    {
      "id": "LFk6E0n-PVWEcctuOd5Uj",
      "type": "ellipse",
      "x": 3841.4051311174303,
      "y": 3231.073948552922,
      "width": 323.0000305175781,
      "height": 297,
      "angle": 0,
      "strokeColor": "#1e1e1e",
      "backgroundColor": "#ffffff",
      "fillStyle": "solid",
      "strokeWidth": 2,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "groupIds": [],
      "frameId": null,
      "index": "as",
      "roundness": {
        "type": 2
      },
      "seed": 1383474723,
      "version": 720,
      "versionNonce": 1810403779,
      "isDeleted": false,
      "boundElements": [
        {
          "type": "text",
          "id": "gcFVQnLj4yQOtwMsAmR4C"
        },
        {
          "id": "QaGuJh6Li_WEyApYbd70E",
          "type": "arrow"
        },
        {
          "id": "iy2wbsUeECq8Z3BjDXWWW",
          "type": "arrow"
        }
      ],
      "updated": 1761791939699,
      "link": null,
      "locked": false
    },
    {
      "id": "gcFVQnLj4yQOtwMsAmR4C",
      "type": "text",
      "x": 3898.2073904249987,
      "y": 3279.5685915467193,
      "width": 209,
      "height": 200,
      "angle": 0,
      "strokeColor": "#1e1e1e",
      "backgroundColor": "#ffffff",
      "fillStyle": "solid",
      "strokeWidth": 2,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "groupIds": [],
      "frameId": null,
      "index": "at",
      "roundness": null,
      "seed": 725383981,
      "version": 806,
      "versionNonce": 756506979,
      "isDeleted": false,
      "boundElements": null,
      "updated": 1761791939699,
      "link": null,
      "locked": false,
      "text": "potstgres Gameplay\nDB (partition by\ngame_id, not\nuser_id to evenly\ndistribute. Also\nupdates leaderboard\nafter db\ntransaction commits",
      "fontSize": 20,
      "fontFamily": 8,
      "textAlign": "center",
      "verticalAlign": "middle",
      "containerId": "LFk6E0n-PVWEcctuOd5Uj",
      "originalText": "potstgres Gameplay DB (partition by game_id, not user_id to evenly distribute. Also updates leaderboard after db transaction commits  ",
      "autoResize": true,
      "lineHeight": 1.25
    },
    {
      "id": "KcIMjpmc65fv8f7YjE3Kf",
      "type": "arrow",
      "x": 1602.0241809163047,
      "y": 3112.314769300491,
      "width": 211.66661580403627,
      "height": 13.726889660913002,
      "angle": 0,
      "strokeColor": "#1e1e1e",
      "backgroundColor": "#ffffff",
      "fillStyle": "solid",
      "strokeWidth": 2,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "groupIds": [],
      "frameId": null,
      "index": "aw",
      "roundness": null,
      "seed": 291528099,
      "version": 1611,
      "versionNonce": 676222125,
      "isDeleted": false,
      "boundElements": null,
      "updated": 1761791939965,
      "link": null,
      "locked": false,
      "points": [
        [
          0,
          0
        ],
        [
          211.66661580403627,
          13.726889660913002
        ]
      ],
      "lastCommittedPoint": null,
      "startBinding": {
        "elementId": "O_mPNbTzQB9a_tw_xIHNp",
        "focus": 0.015822336944916145,
        "gap": 9.619049798874585
      },
      "endBinding": {
        "elementId": "yfjstreCZRYMrcNdci3wu",
        "focus": 0.23202284675031667,
        "gap": 16.047670273553877
      },
      "startArrowhead": null,
      "endArrowhead": "arrow",
      "elbowed": false
    },
    {
      "id": "QaGuJh6Li_WEyApYbd70E",
      "type": "arrow",
      "x": 3972.690949308232,
      "y": 3228.6224933105595,
      "width": 1033.565643321263,
      "height": 762.4551023551376,
      "angle": 0,
      "strokeColor": "#1e1e1e",
      "backgroundColor": "#ffffff",
      "fillStyle": "solid",
      "strokeWidth": 2,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "groupIds": [],
      "frameId": null,
      "index": "az",
      "roundness": null,
      "seed": 936129005,
      "version": 1683,
      "versionNonce": 459675619,
      "isDeleted": false,
      "boundElements": null,
      "updated": 1761791939699,
      "link": null,
      "locked": false,
      "points": [
        [
          0,
          0
        ],
        [
          0,
          -762.4551023551376
        ],
        [
          -1033.565643321263,
          -762.4551023551376
        ]
      ],
      "lastCommittedPoint": null,
      "startBinding": {
        "elementId": "LFk6E0n-PVWEcctuOd5Uj",
        "focus": -0.1870847938904013,
        "gap": 4.999495931677882,
        "fixedPoint": [
          0.4064576030547993,
          -0.00825405805509412
        ]
      },
      "endBinding": {
        "elementId": "mPzBXEfIUS4rqk6p3hcBO",
        "focus": -0.18800472059489942,
        "gap": 4.991936687065843,
        "fixedPoint": [
          1.0044794903133205,
          0.40599763970255065
        ]
      },
      "startArrowhead": null,
      "endArrowhead": "arrow",
      "elbowed": true,
      "fixedSegments": null,
      "startIsSpecial": null,
      "endIsSpecial": null
    },
    {
      "id": "eRTdGK7xVaqmJjvuLT3Rk",
      "type": "arrow",
      "x": 2548.4052870863056,
      "y": 2543.6211837669703,
      "width": 255.69366514132344,
      "height": 0.8878916032963389,
      "angle": 0,
      "strokeColor": "#1e1e1e",
      "backgroundColor": "#ffffff",
      "fillStyle": "solid",
      "strokeWidth": 2,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "groupIds": [],
      "frameId": null,
      "index": "b00",
      "roundness": null,
      "seed": 1506819565,
      "version": 1581,
      "versionNonce": 993993603,
      "isDeleted": false,
      "boundElements": null,
      "updated": 1761791939699,
      "link": null,
      "locked": false,
      "points": [
        [
          0,
          0
        ],
        [
          -255.69366514132344,
          0.8878916032963389
        ]
      ],
      "lastCommittedPoint": null,
      "startBinding": {
        "elementId": "mPzBXEfIUS4rqk6p3hcBO",
        "focus": 0.0006920414859533259,
        "gap": 4.999999884445792,
        "fixedPoint": [
          -0.013020720634460333,
          0.49965397925702404
        ]
      },
      "endBinding": {
        "elementId": "UxouD5Mfm9bxZQs6OEucQ",
        "focus": -0.13994951015903045,
        "gap": 4.998600050294699,
        "fixedPoint": [
          1.0184796570776666,
          0.4300252449204852
        ]
      },
      "startArrowhead": null,
      "endArrowhead": "arrow",
      "elbowed": true,
      "fixedSegments": null,
      "startIsSpecial": null,
      "endIsSpecial": null
    },
    {
      "id": "jBcHFnAK0tcbXfJDdEDZO",
      "type": "arrow",
      "x": 1539.028558373908,
      "y": 3026.4073794335136,
      "width": 525.8223434494479,
      "height": 435.70649763041456,
      "angle": 0,
      "strokeColor": "#1e1e1e",
      "backgroundColor": "#ffffff",
      "fillStyle": "solid",
      "strokeWidth": 2,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "groupIds": [],
      "frameId": null,
      "index": "b01",
      "roundness": null,
      "seed": 1543397709,
      "version": 1477,
      "versionNonce": 161009005,
      "isDeleted": false,
      "boundElements": null,
      "updated": 1761791939965,
      "link": null,
      "locked": false,
      "points": [
        [
          0,
          0
        ],
        [
          525.8223434494479,
          -435.70649763041456
        ]
      ],
      "lastCommittedPoint": null,
      "startBinding": {
        "elementId": "O_mPNbTzQB9a_tw_xIHNp",
        "focus": -0.36538771730081193,
        "gap": 12.000032152449421
      },
      "endBinding": {
        "elementId": "UxouD5Mfm9bxZQs6OEucQ",
        "focus": 0.28807345674825063,
        "gap": 9.88200231497635
      },
      "startArrowhead": null,
      "endArrowhead": "arrow",
      "elbowed": false
    },
    {
      "id": "yso96Tq7S6PFTUrRr-KAe",
      "type": "arrow",
      "x": 2929.0718232154118,
      "y": 3078.4072980533047,
      "width": 48.333358764648665,
      "height": 402.3701630593896,
      "angle": 0,
      "strokeColor": "#1e1e1e",
      "backgroundColor": "#ffffff",
      "fillStyle": "solid",
      "strokeWidth": 2,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "groupIds": [],
      "frameId": null,
      "index": "b08",
      "roundness": null,
      "seed": 893209613,
      "version": 1106,
      "versionNonce": 599285443,
      "isDeleted": false,
      "boundElements": null,
      "updated": 1761791939699,
      "link": null,
      "locked": false,
      "points": [
        [
          0,
          0
        ],
        [
          48.333358764648665,
          0
        ],
        [
          48.333358764648665,
          -402.3701630593896
        ],
        [
          3.361602379129863,
          -402.3701630593896
        ]
      ],
      "lastCommittedPoint": null,
      "startBinding": {
        "elementId": "BkGbI5yyATWIWR00NKdl4",
        "focus": -0.42740389516738403,
        "gap": 4.999999999999773,
        "fixedPoint": [
          1.0148809530567418,
          0.28629805241631284
        ]
      },
      "endBinding": {
        "elementId": "mPzBXEfIUS4rqk6p3hcBO",
        "focus": -0.9741054313762593,
        "gap": 4.973376775276646,
        "fixedPoint": [
          0.9870527156881294,
          0.6597700025060492
        ]
      },
      "startArrowhead": null,
      "endArrowhead": "arrow",
      "elbowed": true,
      "fixedSegments": null,
      "startIsSpecial": null,
      "endIsSpecial": null
    },
    {
      "id": "DFNEIN3JRfy7s6Evn_rou",
      "type": "rectangle",
      "x": 2213.2811127661903,
      "y": 3015.221638553915,
      "width": 226.66666666666674,
      "height": 180,
      "angle": 0,
      "strokeColor": "#1e1e1e",
      "backgroundColor": "#ffffff",
      "fillStyle": "solid",
      "strokeWidth": 2,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "groupIds": [],
      "frameId": null,
      "index": "b09",
      "roundness": {
        "type": 3
      },
      "seed": 1747298861,
      "version": 424,
      "versionNonce": 1399164515,
      "isDeleted": false,
      "boundElements": [
        {
          "type": "text",
          "id": "QbBH_o3elypV1dpzgvzUz"
        },
        {
          "id": "pu3pA9SzlhUr-mOcwK9Pu",
          "type": "arrow"
        },
        {
          "id": "6v92clTLzLvREJPS03Cfl",
          "type": "arrow"
        },
        {
          "id": "6n1NXy7MXcocSrqM6nGtE",
          "type": "arrow"
        }
      ],
      "updated": 1761791939699,
      "link": null,
      "locked": false
    },
    {
      "id": "QbBH_o3elypV1dpzgvzUz",
      "type": "text",
      "x": 2227.614446099524,
      "y": 3042.721638553915,
      "width": 198,
      "height": 125,
      "angle": 0,
      "strokeColor": "#1e1e1e",
      "backgroundColor": "#ffffff",
      "fillStyle": "solid",
      "strokeWidth": 2,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "groupIds": [],
      "frameId": null,
      "index": "b0A",
      "roundness": null,
      "seed": 324524259,
      "version": 436,
      "versionNonce": 1628162563,
      "isDeleted": false,
      "boundElements": null,
      "updated": 1761791939699,
      "link": null,
      "locked": false,
      "text": "API GW(sticky\nsessions for\nmatchmaking which\nrequires Websocket\nconnections)",
      "fontSize": 20,
      "fontFamily": 8,
      "textAlign": "center",
      "verticalAlign": "middle",
      "containerId": "DFNEIN3JRfy7s6Evn_rou",
      "originalText": "API GW(sticky sessions for matchmaking which requires Websocket connections)",
      "autoResize": true,
      "lineHeight": 1.25
    },
    {
      "id": "pu3pA9SzlhUr-mOcwK9Pu",
      "type": "arrow",
      "x": 2075.7384898820783,
      "y": 3175.3445168791504,
      "width": 132.54262288411178,
      "height": 70.2228783252358,
      "angle": 0,
      "strokeColor": "#1e1e1e",
      "backgroundColor": "#ffffff",
      "fillStyle": "solid",
      "strokeWidth": 2,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "groupIds": [],
      "frameId": null,
      "index": "b0B",
      "roundness": null,
      "seed": 1214208237,
      "version": 978,
      "versionNonce": 1779511427,
      "isDeleted": false,
      "boundElements": null,
      "updated": 1761791939700,
      "link": null,
      "locked": false,
      "points": [
        [
          0,
          0
        ],
        [
          66.271311442056,
          0
        ],
        [
          66.271311442056,
          -70.2228783252358
        ],
        [
          132.54262288411178,
          -70.2228783252358
        ]
      ],
      "lastCommittedPoint": null,
      "startBinding": {
        "elementId": "yfjstreCZRYMrcNdci3wu",
        "focus": -0.0013698627989543217,
        "gap": 5,
        "fixedPoint": [
          1.0207468859964377,
          0.49931506860052377
        ]
      },
      "endBinding": {
        "elementId": "DFNEIN3JRfy7s6Evn_rou",
        "focus": 0.0011111111111162923,
        "gap": 5.000000000000114,
        "fixedPoint": [
          -0.02205882352941226,
          0.4994444444444424
        ]
      },
      "startArrowhead": null,
      "endArrowhead": "arrow",
      "elbowed": true,
      "fixedSegments": null,
      "startIsSpecial": null,
      "endIsSpecial": null
    },
    {
      "id": "6v92clTLzLvREJPS03Cfl",
      "type": "arrow",
      "x": 2440.947779432857,
      "y": 3126.9002099824875,
      "width": 139,
      "height": 1.6547619047605622,
      "angle": 0,
      "strokeColor": "#1e1e1e",
      "backgroundColor": "#ffffff",
      "fillStyle": "solid",
      "strokeWidth": 2,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "groupIds": [],
      "frameId": null,
      "index": "b0C",
      "roundness": null,
      "seed": 1907501219,
      "version": 997,
      "versionNonce": 397153837,
      "isDeleted": false,
      "boundElements": null,
      "updated": 1761791939965,
      "link": null,
      "locked": false,
      "points": [
        [
          0,
          0
        ],
        [
          139,
          1.6547619047605622
        ]
      ],
      "lastCommittedPoint": null,
      "startBinding": {
        "elementId": "DFNEIN3JRfy7s6Evn_rou",
        "focus": 0.22241529105128582,
        "gap": 1
      },
      "endBinding": {
        "elementId": "BkGbI5yyATWIWR00NKdl4",
        "focus": -0.2085145100737251,
        "gap": 8.124059041344026
      },
      "startArrowhead": null,
      "endArrowhead": "arrow",
      "elbowed": false
    },
    {
      "id": "6n1NXy7MXcocSrqM6nGtE",
      "type": "arrow",
      "x": 2459.947658340407,
      "y": 3166.8910063823887,
      "width": 93.33345442578297,
      "height": 186.6651275643262,
      "angle": 0,
      "strokeColor": "#1e1e1e",
      "backgroundColor": "#ffffff",
      "fillStyle": "solid",
      "strokeWidth": 2,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "groupIds": [],
      "frameId": null,
      "index": "b0D",
      "roundness": {
        "type": 2
      },
      "seed": 827267363,
      "version": 982,
      "versionNonce": 848572141,
      "isDeleted": false,
      "boundElements": null,
      "updated": 1761791939965,
      "link": null,
      "locked": false,
      "points": [
        [
          0,
          0
        ],
        [
          93.33345442578297,
          186.6651275643262
        ]
      ],
      "lastCommittedPoint": null,
      "startBinding": {
        "elementId": "DFNEIN3JRfy7s6Evn_rou",
        "focus": -0.6473555121650489,
        "gap": 20.08271668330606
      },
      "endBinding": {
        "elementId": "v4qlF3js7jtJHbb7-KLjI",
        "focus": -0.7685445438374051,
        "gap": 19.45747375488645
      },
      "startArrowhead": null,
      "endArrowhead": "arrow",
      "elbowed": false
    },
    {
      "id": "SKbsAqRFRu5DY8VnEZAeh",
      "type": "ellipse",
      "x": 3821.146192131266,
      "y": 3652.6105274428073,
      "width": 339.9999999999998,
      "height": 304,
      "angle": 0,
      "strokeColor": "#1e1e1e",
      "backgroundColor": "#ffffff",
      "fillStyle": "solid",
      "strokeWidth": 2,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "groupIds": [],
      "frameId": null,
      "index": "b0E",
      "roundness": {
        "type": 2
      },
      "seed": 339232877,
      "version": 276,
      "versionNonce": 1459010403,
      "isDeleted": false,
      "boundElements": [
        {
          "type": "text",
          "id": "jc77w0KBH-kDbq8pmMOPr"
        },
        {
          "id": "xI5My_mNJ1nVDy_45WZoB",
          "type": "arrow"
        }
      ],
      "updated": 1761791939700,
      "link": null,
      "locked": false
    },
    {
      "id": "jc77w0KBH-kDbq8pmMOPr",
      "type": "text",
      "x": 3880.9380393295532,
      "y": 3767.130296702452,
      "width": 220,
      "height": 75,
      "angle": 0,
      "strokeColor": "#1e1e1e",
      "backgroundColor": "#ffffff",
      "fillStyle": "solid",
      "strokeWidth": 2,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "groupIds": [],
      "frameId": null,
      "index": "b0F",
      "roundness": null,
      "seed": 536451107,
      "version": 285,
      "versionNonce": 334452483,
      "isDeleted": false,
      "boundElements": null,
      "updated": 1761791939700,
      "link": null,
      "locked": false,
      "text": "User db (2 rows need\nto be updated for\neach competed game)",
      "fontSize": 20,
      "fontFamily": 8,
      "textAlign": "center",
      "verticalAlign": "middle",
      "containerId": "SKbsAqRFRu5DY8VnEZAeh",
      "originalText": "User db (2 rows need to be updated for each competed game)",
      "autoResize": true,
      "lineHeight": 1.25
    },
    {
      "id": "6tBmAYnslkNuq8Nl4m0uQ",
      "type": "rectangle",
      "x": 3099.1461921312666,
      "y": 3448.6105274428073,
      "width": 298,
      "height": 198,
      "angle": 0,
      "strokeColor": "#1e1e1e",
      "backgroundColor": "#ffffff",
      "fillStyle": "solid",
      "strokeWidth": 2,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "groupIds": [],
      "frameId": null,
      "index": "b0G",
      "roundness": {
        "type": 3
      },
      "seed": 2036423181,
      "version": 252,
      "versionNonce": 1435611715,
      "isDeleted": false,
      "boundElements": [
        {
          "type": "text",
          "id": "IeJ__5kS5jCcUYRI5K4TF"
        },
        {
          "id": "o_OVZLhd21rIEvmD78zkD",
          "type": "arrow"
        },
        {
          "id": "ZnQA_JUQByPiApBzTu6bf",
          "type": "arrow"
        }
      ],
      "updated": 1761791939700,
      "link": null,
      "locked": false
    },
    {
      "id": "IeJ__5kS5jCcUYRI5K4TF",
      "type": "text",
      "x": 3132.6461921312666,
      "y": 3522.6105274428073,
      "width": 231,
      "height": 50,
      "angle": 0,
      "strokeColor": "#1e1e1e",
      "backgroundColor": "#ffffff",
      "fillStyle": "solid",
      "strokeWidth": 2,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "groupIds": [],
      "frameId": null,
      "index": "b0H",
      "roundness": null,
      "seed": 1224017603,
      "version": 235,
      "versionNonce": 902328803,
      "isDeleted": false,
      "boundElements": null,
      "updated": 1761791939700,
      "link": null,
      "locked": false,
      "text": "kafka (topic:\ngame.match.completed)",
      "fontSize": 20,
      "fontFamily": 8,
      "textAlign": "center",
      "verticalAlign": "middle",
      "containerId": "6tBmAYnslkNuq8Nl4m0uQ",
      "originalText": "kafka (topic: game.match.completed)",
      "autoResize": true,
      "lineHeight": 1.25
    },
    {
      "id": "dpD4fTbQzIm3l_PGc1-Vu",
      "type": "rectangle",
      "x": 3491.1461921312666,
      "y": 3438.6105274428073,
      "width": 277.9999999999998,
      "height": 212,
      "angle": 0,
      "strokeColor": "#1e1e1e",
      "backgroundColor": "#ffffff",
      "fillStyle": "solid",
      "strokeWidth": 2,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "groupIds": [],
      "frameId": null,
      "index": "b0I",
      "roundness": {
        "type": 3
      },
      "seed": 29355437,
      "version": 217,
      "versionNonce": 490797251,
      "isDeleted": false,
      "boundElements": [
        {
          "type": "text",
          "id": "AHrgTTA7rwEqm_SBp6ubA"
        },
        {
          "id": "ZnQA_JUQByPiApBzTu6bf",
          "type": "arrow"
        },
        {
          "id": "iy2wbsUeECq8Z3BjDXWWW",
          "type": "arrow"
        },
        {
          "id": "xI5My_mNJ1nVDy_45WZoB",
          "type": "arrow"
        }
      ],
      "updated": 1761791939700,
      "link": null,
      "locked": false
    },
    {
      "id": "AHrgTTA7rwEqm_SBp6ubA",
      "type": "text",
      "x": 3547.646192131266,
      "y": 3532.1105274428073,
      "width": 165,
      "height": 25,
      "angle": 0,
      "strokeColor": "#1e1e1e",
      "backgroundColor": "#ffffff",
      "fillStyle": "solid",
      "strokeWidth": 2,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "groupIds": [],
      "frameId": null,
      "index": "b0J",
      "roundness": null,
      "seed": 567904141,
      "version": 193,
      "versionNonce": 80406627,
      "isDeleted": false,
      "boundElements": null,
      "updated": 1761791939700,
      "link": null,
      "locked": false,
      "text": "storage workers",
      "fontSize": 20,
      "fontFamily": 8,
      "textAlign": "center",
      "verticalAlign": "middle",
      "containerId": "dpD4fTbQzIm3l_PGc1-Vu",
      "originalText": "storage workers",
      "autoResize": true,
      "lineHeight": 1.25
    },
    {
      "id": "o_OVZLhd21rIEvmD78zkD",
      "type": "arrow",
      "x": 2945.1461921312666,
      "y": 3438.6105274428073,
      "width": 134,
      "height": 96,
      "angle": 0,
      "strokeColor": "#1e1e1e",
      "backgroundColor": "#ffffff",
      "fillStyle": "solid",
      "strokeWidth": 2,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "groupIds": [],
      "frameId": null,
      "index": "b0K",
      "roundness": {
        "type": 2
      },
      "seed": 193321123,
      "version": 487,
      "versionNonce": 660412333,
      "isDeleted": false,
      "boundElements": null,
      "updated": 1761791939966,
      "link": null,
      "locked": false,
      "points": [
        [
          0,
          0
        ],
        [
          134,
          96
        ]
      ],
      "lastCommittedPoint": null,
      "startBinding": {
        "elementId": "v4qlF3js7jtJHbb7-KLjI",
        "focus": -0.4720092681806655,
        "gap": 14.407575092612205
      },
      "endBinding": {
        "elementId": "6tBmAYnslkNuq8Nl4m0uQ",
        "focus": -0.5252811026478024,
        "gap": 20
      },
      "startArrowhead": null,
      "endArrowhead": "arrow",
      "elbowed": false
    },
    {
      "id": "ZnQA_JUQByPiApBzTu6bf",
      "type": "arrow",
      "x": 3402.146192131266,
      "y": 3547.510527442807,
      "width": 84.00000000000023,
      "height": 2.9999999999990905,
      "angle": 0,
      "strokeColor": "#1e1e1e",
      "backgroundColor": "#ffffff",
      "fillStyle": "solid",
      "strokeWidth": 2,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "groupIds": [],
      "frameId": null,
      "index": "b0L",
      "roundness": null,
      "seed": 985279373,
      "version": 475,
      "versionNonce": 249449091,
      "isDeleted": false,
      "boundElements": null,
      "updated": 1761791939700,
      "link": null,
      "locked": false,
      "points": [
        [
          0,
          0
        ],
        [
          42.00000000000023,
          0
        ],
        [
          42.00000000000023,
          -2.9999999999990905
        ],
        [
          84.00000000000023,
          -2.9999999999990905
        ]
      ],
      "lastCommittedPoint": null,
      "startBinding": {
        "elementId": "6tBmAYnslkNuq8Nl4m0uQ",
        "focus": -0.0010101010101110166,
        "gap": 4.999999999999773,
        "fixedPoint": [
          1.016778523489932,
          0.49949494949494305
        ]
      },
      "endBinding": {
        "elementId": "dpD4fTbQzIm3l_PGc1-Vu",
        "focus": 0.0009433962264204134,
        "gap": 5,
        "fixedPoint": [
          -0.01798561151079138,
          0.49952830188679076
        ]
      },
      "startArrowhead": null,
      "endArrowhead": "arrow",
      "elbowed": true,
      "fixedSegments": null,
      "startIsSpecial": null,
      "endIsSpecial": null
    },
    {
      "id": "iy2wbsUeECq8Z3BjDXWWW",
      "type": "arrow",
      "x": 3775.146192131266,
      "y": 3574.6105274428073,
      "width": 68,
      "height": 120,
      "angle": 0,
      "strokeColor": "#1e1e1e",
      "backgroundColor": "#ffffff",
      "fillStyle": "solid",
      "strokeWidth": 2,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "groupIds": [],
      "frameId": null,
      "index": "b0M",
      "roundness": {
        "type": 2
      },
      "seed": 1968485613,
      "version": 497,
      "versionNonce": 1880281197,
      "isDeleted": false,
      "boundElements": null,
      "updated": 1761791939966,
      "link": null,
      "locked": false,
      "points": [
        [
          0,
          0
        ],
        [
          68,
          -120
        ]
      ],
      "lastCommittedPoint": null,
      "startBinding": {
        "elementId": "dpD4fTbQzIm3l_PGc1-Vu",
        "focus": 0.813797722705961,
        "gap": 5.999999999999545
      },
      "endBinding": {
        "elementId": "LFk6E0n-PVWEcctuOd5Uj",
        "focus": 0.4772571501118883,
        "gap": 17.569818424206368
      },
      "startArrowhead": null,
      "endArrowhead": "arrow",
      "elbowed": false
    },
    {
      "id": "xI5My_mNJ1nVDy_45WZoB",
      "type": "arrow",
      "x": 3774.1164015845056,
      "y": 3620.610515081692,
      "width": 66.45303616616047,
      "height": 104.0000123611162,
      "angle": 0,
      "strokeColor": "#1e1e1e",
      "backgroundColor": "#ffffff",
      "fillStyle": "solid",
      "strokeWidth": 2,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "groupIds": [],
      "frameId": null,
      "index": "b0N",
      "roundness": null,
      "seed": 398569987,
      "version": 511,
      "versionNonce": 955893187,
      "isDeleted": false,
      "boundElements": null,
      "updated": 1761791939700,
      "link": null,
      "locked": false,
      "points": [
        [
          0,
          0
        ],
        [
          21.029790546760523,
          0
        ],
        [
          21.029790546760523,
          104.0000123611162
        ],
        [
          66.45303616616047,
          104.0000123611162
        ]
      ],
      "lastCommittedPoint": null,
      "startBinding": {
        "elementId": "dpD4fTbQzIm3l_PGc1-Vu",
        "focus": 0.7169810154611702,
        "gap": 5.0000561171097795,
        "fixedPoint": [
          1.0178784512706456,
          0.8584905077305839
        ]
      },
      "endBinding": {
        "elementId": "SKbsAqRFRu5DY8VnEZAeh",
        "focus": -0.8857456140035328,
        "gap": 4.993873707468004,
        "fixedPoint": [
          0.05712719299823518,
          0.23684210526315788
        ]
      },
      "startArrowhead": null,
      "endArrowhead": "arrow",
      "elbowed": true,
      "fixedSegments": null,
      "startIsSpecial": null,
      "endIsSpecial": null
    }
  ],
  "appState": {
    "gridSize": 20,
    "gridStep": 5,
    "gridModeEnabled": false,
    "viewBackgroundColor": "#ffffff",
    "lockedMultiSelections": {}
  },
  "files": {}
}
